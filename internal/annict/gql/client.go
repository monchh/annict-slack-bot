// Code generated by github.com/Yamashou/gqlgenc, DO NOT EDIT.

package annict

import (
	"context"

	"github.com/Yamashou/gqlgenc/clientv2"
)

type Client struct {
	Client *clientv2.Client
}

func NewClient(cli clientv2.HttpClient, baseURL string, options *clientv2.Options, interceptors ...clientv2.RequestInterceptor) *Client {
	return &Client{Client: clientv2.NewClient(cli, baseURL, options, interceptors...)}
}

type GetPrograms_Viewer_Programs_Nodes_Work_Image struct {
	FacebookOgImageURL  *string "json:\"facebookOgImageUrl,omitempty\" graphql:\"facebookOgImageUrl\""
	RecommendedImageURL *string "json:\"recommendedImageUrl,omitempty\" graphql:\"recommendedImageUrl\""
}

func (t *GetPrograms_Viewer_Programs_Nodes_Work_Image) GetFacebookOgImageURL() *string {
	if t == nil {
		t = &GetPrograms_Viewer_Programs_Nodes_Work_Image{}
	}
	return t.FacebookOgImageURL
}
func (t *GetPrograms_Viewer_Programs_Nodes_Work_Image) GetRecommendedImageURL() *string {
	if t == nil {
		t = &GetPrograms_Viewer_Programs_Nodes_Work_Image{}
	}
	return t.RecommendedImageURL
}

type GetPrograms_Viewer_Programs_Nodes_Work struct {
	Image           *GetPrograms_Viewer_Programs_Nodes_Work_Image "json:\"image,omitempty\" graphql:\"image\""
	OfficialSiteURL *string                                                "json:\"officialSiteUrl,omitempty\" graphql:\"officialSiteUrl\""
	Title           string                                                 "json:\"title\" graphql:\"title\""
}

func (t *GetPrograms_Viewer_Programs_Nodes_Work) GetImage() *GetPrograms_Viewer_Programs_Nodes_Work_Image {
	if t == nil {
		t = &GetPrograms_Viewer_Programs_Nodes_Work{}
	}
	return t.Image
}
func (t *GetPrograms_Viewer_Programs_Nodes_Work) GetOfficialSiteURL() *string {
	if t == nil {
		t = &GetPrograms_Viewer_Programs_Nodes_Work{}
	}
	return t.OfficialSiteURL
}
func (t *GetPrograms_Viewer_Programs_Nodes_Work) GetTitle() string {
	if t == nil {
		t = &GetPrograms_Viewer_Programs_Nodes_Work{}
	}
	return t.Title
}

type GetPrograms_Viewer_Programs_Nodes_Channel struct {
	Name string "json:\"name\" graphql:\"name\""
}

func (t *GetPrograms_Viewer_Programs_Nodes_Channel) GetName() string {
	if t == nil {
		t = &GetPrograms_Viewer_Programs_Nodes_Channel{}
	}
	return t.Name
}

type GetPrograms_Viewer_Programs_Nodes_Episode struct {
	Number     *int64  "json:\"number,omitempty\" graphql:\"number\""
	NumberText *string "json:\"numberText,omitempty\" graphql:\"numberText\""
	Title      *string "json:\"title,omitempty\" graphql:\"title\""
}

func (t *GetPrograms_Viewer_Programs_Nodes_Episode) GetNumber() *int64 {
	if t == nil {
		t = &GetPrograms_Viewer_Programs_Nodes_Episode{}
	}
	return t.Number
}
func (t *GetPrograms_Viewer_Programs_Nodes_Episode) GetNumberText() *string {
	if t == nil {
		t = &GetPrograms_Viewer_Programs_Nodes_Episode{}
	}
	return t.NumberText
}
func (t *GetPrograms_Viewer_Programs_Nodes_Episode) GetTitle() *string {
	if t == nil {
		t = &GetPrograms_Viewer_Programs_Nodes_Episode{}
	}
	return t.Title
}

type GetPrograms_Viewer_Programs_Nodes struct {
	Channel   GetPrograms_Viewer_Programs_Nodes_Channel "json:\"channel\" graphql:\"channel\""
	Episode   GetPrograms_Viewer_Programs_Nodes_Episode "json:\"episode\" graphql:\"episode\""
	StartedAt string                                             "json:\"startedAt\" graphql:\"startedAt\""
	Work      GetPrograms_Viewer_Programs_Nodes_Work    "json:\"work\" graphql:\"work\""
}

func (t *GetPrograms_Viewer_Programs_Nodes) GetChannel() *GetPrograms_Viewer_Programs_Nodes_Channel {
	if t == nil {
		t = &GetPrograms_Viewer_Programs_Nodes{}
	}
	return &t.Channel
}
func (t *GetPrograms_Viewer_Programs_Nodes) GetEpisode() *GetPrograms_Viewer_Programs_Nodes_Episode {
	if t == nil {
		t = &GetPrograms_Viewer_Programs_Nodes{}
	}
	return &t.Episode
}
func (t *GetPrograms_Viewer_Programs_Nodes) GetStartedAt() string {
	if t == nil {
		t = &GetPrograms_Viewer_Programs_Nodes{}
	}
	return t.StartedAt
}
func (t *GetPrograms_Viewer_Programs_Nodes) GetWork() *GetPrograms_Viewer_Programs_Nodes_Work {
	if t == nil {
		t = &GetPrograms_Viewer_Programs_Nodes{}
	}
	return &t.Work
}

type GetPrograms_Viewer_Programs struct {
	Nodes []*GetPrograms_Viewer_Programs_Nodes "json:\"nodes,omitempty\" graphql:\"nodes\""
}

func (t *GetPrograms_Viewer_Programs) GetNodes() []*GetPrograms_Viewer_Programs_Nodes {
	if t == nil {
		t = &GetPrograms_Viewer_Programs{}
	}
	return t.Nodes
}

type GetPrograms_Viewer struct {
	Programs *GetPrograms_Viewer_Programs "json:\"programs,omitempty\" graphql:\"programs\""
}

func (t *GetPrograms_Viewer) GetPrograms() *GetPrograms_Viewer_Programs {
	if t == nil {
		t = &GetPrograms_Viewer{}
	}
	return t.Programs
}

type GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work_Image struct {
	FacebookOgImageURL  *string "json:\"facebookOgImageUrl,omitempty\" graphql:\"facebookOgImageUrl\""
	RecommendedImageURL *string "json:\"recommendedImageUrl,omitempty\" graphql:\"recommendedImageUrl\""
}

func (t *GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work_Image) GetFacebookOgImageURL() *string {
	if t == nil {
		t = &GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work_Image{}
	}
	return t.FacebookOgImageURL
}
func (t *GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work_Image) GetRecommendedImageURL() *string {
	if t == nil {
		t = &GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work_Image{}
	}
	return t.RecommendedImageURL
}

type GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work struct {
	Image           *GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work_Image "json:\"image,omitempty\" graphql:\"image\""
	OfficialSiteURL *string                                                   "json:\"officialSiteUrl,omitempty\" graphql:\"officialSiteUrl\""
	Title           string                                                    "json:\"title\" graphql:\"title\""
}

func (t *GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work) GetImage() *GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work_Image {
	if t == nil {
		t = &GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work{}
	}
	return t.Image
}
func (t *GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work) GetOfficialSiteURL() *string {
	if t == nil {
		t = &GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work{}
	}
	return t.OfficialSiteURL
}
func (t *GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work) GetTitle() string {
	if t == nil {
		t = &GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work{}
	}
	return t.Title
}

type GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextProgram_Channel struct {
	Name string "json:\"name\" graphql:\"name\""
}

func (t *GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextProgram_Channel) GetName() string {
	if t == nil {
		t = &GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextProgram_Channel{}
	}
	return t.Name
}

type GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextProgram struct {
	Channel   GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextProgram_Channel "json:\"channel\" graphql:\"channel\""
	StartedAt string                                                            "json:\"startedAt\" graphql:\"startedAt\""
}

func (t *GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextProgram) GetChannel() *GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextProgram_Channel {
	if t == nil {
		t = &GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextProgram{}
	}
	return &t.Channel
}
func (t *GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextProgram) GetStartedAt() string {
	if t == nil {
		t = &GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextProgram{}
	}
	return t.StartedAt
}

type GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextEpisode struct {
	NumberText *string "json:\"numberText,omitempty\" graphql:\"numberText\""
	Title      *string "json:\"title,omitempty\" graphql:\"title\""
}

func (t *GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextEpisode) GetNumberText() *string {
	if t == nil {
		t = &GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextEpisode{}
	}
	return t.NumberText
}
func (t *GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextEpisode) GetTitle() *string {
	if t == nil {
		t = &GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextEpisode{}
	}
	return t.Title
}

type GetLibraryEntries_Viewer_LibraryEntries_Nodes struct {
	NextEpisode *GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextEpisode "json:\"nextEpisode,omitempty\" graphql:\"nextEpisode\""
	NextProgram *GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextProgram "json:\"nextProgram,omitempty\" graphql:\"nextProgram\""
	Work        GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work         "json:\"work\" graphql:\"work\""
}

func (t *GetLibraryEntries_Viewer_LibraryEntries_Nodes) GetNextEpisode() *GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextEpisode {
	if t == nil {
		t = &GetLibraryEntries_Viewer_LibraryEntries_Nodes{}
	}
	return t.NextEpisode
}
func (t *GetLibraryEntries_Viewer_LibraryEntries_Nodes) GetNextProgram() *GetLibraryEntries_Viewer_LibraryEntries_Nodes_NextProgram {
	if t == nil {
		t = &GetLibraryEntries_Viewer_LibraryEntries_Nodes{}
	}
	return t.NextProgram
}
func (t *GetLibraryEntries_Viewer_LibraryEntries_Nodes) GetWork() *GetLibraryEntries_Viewer_LibraryEntries_Nodes_Work {
	if t == nil {
		t = &GetLibraryEntries_Viewer_LibraryEntries_Nodes{}
	}
	return &t.Work
}

type GetLibraryEntries_Viewer_LibraryEntries struct {
	Nodes []*GetLibraryEntries_Viewer_LibraryEntries_Nodes "json:\"nodes,omitempty\" graphql:\"nodes\""
}

func (t *GetLibraryEntries_Viewer_LibraryEntries) GetNodes() []*GetLibraryEntries_Viewer_LibraryEntries_Nodes {
	if t == nil {
		t = &GetLibraryEntries_Viewer_LibraryEntries{}
	}
	return t.Nodes
}

type GetLibraryEntries_Viewer struct {
	LibraryEntries *GetLibraryEntries_Viewer_LibraryEntries "json:\"libraryEntries,omitempty\" graphql:\"libraryEntries\""
}

func (t *GetLibraryEntries_Viewer) GetLibraryEntries() *GetLibraryEntries_Viewer_LibraryEntries {
	if t == nil {
		t = &GetLibraryEntries_Viewer{}
	}
	return t.LibraryEntries
}

type GetPrograms struct {
	Viewer *GetPrograms_Viewer "json:\"viewer,omitempty\" graphql:\"viewer\""
}

func (t *GetPrograms) GetViewer() *GetPrograms_Viewer {
	if t == nil {
		t = &GetPrograms{}
	}
	return t.Viewer
}

type GetLibraryEntries struct {
	Viewer *GetLibraryEntries_Viewer "json:\"viewer,omitempty\" graphql:\"viewer\""
}

func (t *GetLibraryEntries) GetViewer() *GetLibraryEntries_Viewer {
	if t == nil {
		t = &GetLibraryEntries{}
	}
	return t.Viewer
}

const GetProgramsDocument = `query GetPrograms {
	viewer {
		programs(unwatched: true, orderBy: {field:STARTED_AT,direction:DESC}) {
			nodes {
				work {
					title
					officialSiteUrl
					image {
						facebookOgImageUrl
						recommendedImageUrl
					}
				}
				startedAt
				channel {
					name
				}
				episode {
					number
					numberText
					title
				}
			}
		}
	}
}
`

func (c *Client) GetPrograms(ctx context.Context, interceptors ...clientv2.RequestInterceptor) (*GetPrograms, error) {
	vars := map[string]any{}

	var res GetPrograms
	if err := c.Client.Post(ctx, "GetPrograms", GetProgramsDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const GetLibraryEntriesDocument = `query GetLibraryEntries ($seasons: [String!]) {
	viewer {
		libraryEntries(states: [WATCHING,WANNA_WATCH], seasons: $seasons, orderBy: {field:LAST_TRACKED_AT,direction:DESC}) {
			nodes {
				work {
					title
					officialSiteUrl
					image {
						facebookOgImageUrl
						recommendedImageUrl
					}
				}
				nextProgram {
					channel {
						name
					}
					startedAt
				}
				nextEpisode {
					numberText
					title
				}
			}
		}
	}
}
`

func (c *Client) GetLibraryEntries(ctx context.Context, seasons []string, interceptors ...clientv2.RequestInterceptor) (*GetLibraryEntries, error) {
	vars := map[string]any{
		"seasons": seasons,
	}

	var res GetLibraryEntries
	if err := c.Client.Post(ctx, "GetLibraryEntries", GetLibraryEntriesDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

var DocumentOperationNames = map[string]string{
	GetProgramsDocument: "GetPrograms",
	GetLibraryEntriesDocument:    "GetLibraryEntries",
}
